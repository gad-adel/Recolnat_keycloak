import{jsxs as c,Fragment as I,jsx as e}from"react/jsx-runtime";import{u as b,e as S,a as P,T as F,F as y,i as g,ba as T,j as f,ac as x,ab as k,aa as A,d as w,g as C,f as D,P as V,h as j,B as h,L as H,bS as L,A as U,bT as $}from"./index-sihFV1NS.js";import{F as q}from"./FormAccess-EK-4wbwg.js";import{V as z}from"./ViewHeader-xo54NRb6.js";import{F as B}from"./FileUploadForm-NPdolxQM.js";import{K as G}from"./KeycloakTextInput--S1SG2UN.js";import{D as K}from"./DiscoveryEndpointField--MEYVRbO.js";import{D as O,S as N}from"./SamlGeneralSettings-0TsojIjh.js";import{A as R}from"./Form-bfj-xQZn.js";import"react";import"react-dom";import"./copy-icon-WaWzxYgU.js";import"./ToolbarContent-46I9Yg7h.js";import"./FileUpload-LIezXv7x.js";import"./CodeEditor-7uqvO0EK.js";import"./EmptyStateBody-jnnI7hpP.js";import"./EmptyStateSecondaryActions-G5doWCZ5.js";import"./Modal-uOAPm2rX.js";import"./KeycloakTextArea-NBwG1p2x.js";import"./discovery-settings-sDKXSACJ.js";import"./ExpandableSection-JW5wd_BH.js";import"./NumberInput-QtFengwl.js";import"./minus-icon-3MARcJXf.js";import"./plus-icon-zbmNbCLY.js";import"./DisplayOrder-DqQik7ga.js";const W=()=>{const{t}=b(),m="saml",{realm:s}=S(),{setValue:n,register:p,setError:d,clearErrors:u,formState:{errors:i}}=P(),l=r=>{Object.entries(r).map(([a,o])=>n(`config.${a}`,o))},v=async r=>{if(u("discoveryError"),!r)return;const a=new FormData;a.append("providerId",m),a.append("file",new Blob([r]));try{const o=await A(`${x(f.baseUrl)}admin/realms/${s}/identity-provider/import-config`,{method:"POST",body:a,headers:k(await f.getAccessToken())});if(o.ok){const E=await o.json();l(E)}else d("discoveryError",{type:"manual",message:o.statusText})}catch(o){d("discoveryError",{type:"manual",message:o.message})}};return c(I,{children:[e(F,{headingLevel:"h2",size:"xl",className:"kc-form-panel__title",children:t("samlSettings")}),e(y,{label:t("serviceProviderEntityId"),fieldId:"kc-service-provider-entity-id",labelIcon:e(g,{helpText:t("serviceProviderEntityIdHelp"),fieldLabelId:"serviceProviderEntityId"}),isRequired:!0,helperTextInvalid:t("required"),validated:i.config?.entityId?"error":"default",children:e(G,{"data-testid":"serviceProviderEntityId",id:"kc-service-provider-entity-id",validated:i.config?.entityId?"error":"default",defaultValue:`${T.authServerUrl}/realms/${s}`,...p("config.entityId",{required:!0})})}),e(K,{id:"saml",fileUpload:e(y,{label:t("importConfig"),fieldId:"kc-import-config",labelIcon:e(g,{helpText:t("importConfigHelp"),fieldLabelId:"importConfig"}),validated:i.discoveryError?"error":"default",helperTextInvalid:i.discoveryError?.message,children:e(B,{id:"kc-import-config",extension:".xml",hideDefaultPreview:!0,unWrap:!0,validated:i.discoveryError?"error":"default",onChange:r=>v(r)})}),children:r=>e(O,{readOnly:r})})]})};function he(){const{t}=b(),m=w(),s="saml",n=C({defaultValues:{alias:s,config:{allowCreate:"true"}}}),{handleSubmit:p,formState:{isDirty:d}}=n,{addAlert:u,addError:i}=D(),{realm:l}=S(),v=async r=>{delete r.discoveryEndpoint;try{await f.identityProviders.create({...r,providerId:s}),u(t("createIdentityProviderSuccess"),U.success),m($({realm:l,providerId:s,alias:r.alias,tab:"settings"}))}catch(a){i("createIdentityProviderError",a)}};return c(I,{children:[e(z,{titleKey:t("addSamlProvider")}),e(V,{variant:"light",children:e(j,{...n,children:c(q,{role:"manage-identity-providers",isHorizontal:!0,onSubmit:p(v),children:[e(N,{}),e(W,{}),c(R,{children:[e(h,{isDisabled:!d,variant:"primary",type:"submit","data-testid":"createProvider",children:t("add")}),e(h,{variant:"link","data-testid":"cancel",component:r=>e(H,{...r,to:L({realm:l})}),children:t("cancel")})]})]})})})]})}export{he as default};
//# sourceMappingURL=AddSamlConnect-M42HN1te.js.map
