import{jsxs as T,Fragment as B,jsx as n}from"react/jsx-runtime";import{useState as f}from"react";import{j as N,u as O,f as H,m as J,A as Q,bo as W,B as F,bg as z,aj as $,bd as X,aG as Y,I as Z,J as ee,K as te}from"./index-sihFV1NS.js";import{u as se}from"./useLocaleSort-K-jL4v2R.js";import{L as U}from"./PaginatingTableToolbar--Dt3wwL6.js";import{K as _}from"./KeycloakDataTable-Q3kZYP9q.js";import{u as le}from"./ConfirmDialog-WMVurgkl.js";import{g as ie,a as ne}from"./resource-BRtaBrSc.js";import{F as oe}from"./filter-icon-0B3gA_nj.js";import{M as ae,a as re}from"./Modal-uOAPm2rX.js";import{b as D}from"./ToolbarContent-46I9Yg7h.js";import{N as ce}from"./Td-uwYquKT4.js";const j={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},V={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listAvailableRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},E={groups:j,users:j,clientScopes:V,clients:V,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},de=e=>N[e],y=(e,i,...t)=>de(e)[i](...t),pe=(e,i,t)=>t.map(s=>{const c={id:s.role.id,name:s.role.name},l=E[e]?.delete[s.client?0:1];return y(e,l,{id:i,clientUniqueId:s.client?.id,client:s.client?.id,roles:[c]},[c])}),me=async(e,i)=>{const t=E[e].listEffective[0],s=y(e,t,{id:i});if(e!=="roles")return s;const c=await s;return{clientMappings:await Promise.all(c.filter(d=>d.clientRole).map(async d=>{const o=await N.clients.findOne({id:d.containerId});return d.containerId=o?.clientId,{...o,mappings:[d]}})),realmMappings:c.filter(d=>!d.clientRole)}},ge=async(e,i)=>{const t=E[e].listEffective[1];if(e!=="roles")return(await y(e,t,{id:i})).map(l=>({role:l}));const s=await y(e,t,{id:i}),c=await Promise.all(s.filter(l=>l.composite).map(l=>y(e,t,{id:l.id})));return[...s,...c.flat()].map(l=>({role:l}))},fe=async(e,i)=>{const t=E[e].listAvailable[1];return(await y(e,t,i)).map(s=>({role:s}))},Re=(e,i,t)=>[...t?e.map(s=>({...s,role:{...s.role,isInherited:!1}})):i.map(s=>({...s,role:{...s.role,isInherited:e.find(c=>c.role.id===s.role.id)===void 0}}))],G=({role:e,client:i})=>T(B,{children:[i?.clientId&&n(X,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:i.clientId}),e.name]}),Te=({name:e,id:i,type:t,isManager:s=!0,save:c})=>{const{t:l}=O(),{addAlert:d,addError:o}=H(),[C,I]=f(0),v=()=>I(C+1),[R,g]=f(!0),[w,u]=f(!1),[A,M]=f([]),L=async a=>{await c(a),v()},k=async()=>{let a=[],K=[];R||(a=await ge(t,i),K=(await ie({type:t,id:i})).map(r=>({client:{clientId:r.client,id:r.clientId},role:{id:r.id,name:r.role,description:r.description}})));const m=await me(t,i),b=m.realmMappings?.map(r=>({role:r}))||[],h=Object.values(m.clientMappings||{}).map(r=>r.mappings.map(p=>({client:{clientId:r.client,...r},role:p}))).flat();return[...Re([...b,...h],[...K,...a],R)]},[S,x]=le({titleKey:"removeMappingTitle",messageKey:l("removeMappingConfirm",{count:A.length}),continueButtonLabel:"remove",continueButtonVariant:J.danger,onConfirm:async()=>{try{await Promise.all(pe(t,i,A)),d(l("clientScopeRemoveSuccess"),Q.success),v()}catch(a){o("clientScopeRemoveError",a)}}});return T(B,{children:[w&&n(ue,{id:i,type:t,name:e,onAssign:L,onClose:()=>u(!1)}),n(x,{}),n(_,{"data-testid":"assigned-roles",loader:k,canSelectAll:!0,onSelect:a=>M(a),searchPlaceholderKey:"searchByName",ariaLabelKey:"clientScopeList",isRowDisabled:a=>a.role.isInherited||!1,toolbarItem:T(B,{children:[n(D,{children:n(W,{label:l("hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:R,onChange:a=>{g(a),v()}})}),s&&T(B,{children:[n(D,{children:n(F,{"data-testid":"assignRole",onClick:()=>u(!0),children:l("assignRole")})}),n(D,{children:n(F,{variant:"link","data-testid":"unAssignRole",onClick:S,isDisabled:A.length===0,children:l("unAssignRole")})})]})]}),actions:s?[{title:l("unAssignRole"),onRowClick:async a=>(M([a]),S(),!1)}]:[],columns:[{name:"role.name",displayKey:l("name"),transforms:[ce(30)],cellRenderer:G},{name:"role.isInherited",displayKey:l("inherent"),cellFormatters:[z(),$()]},{name:"role.description",displayKey:l("description"),cellFormatters:[$()]}],emptyState:n(U,{message:l(`noRoles-${t}`),instructions:l(`noRolesInstructions-${t}`),primaryActionText:l("assignRole"),onPrimaryAction:()=>u(!0)})},`${i}${C}`)]})},ue=({id:e,name:i,type:t,isRadio:s=!1,isLDAPmapper:c,onAssign:l,onClose:d})=>{const{t:o}=O(),{hasAccess:C}=Y(),I=C("view-realm")||C("query-users"),[v,R]=f(!1),[g,w]=f(I?"roles":"clients"),[u,A]=f([]),[M,L]=f(0),k=()=>L(M+1),S=se(),x=({role:{name:m}})=>m?.toUpperCase(),a=async(m,b,h)=>{const r={first:m,max:b};h&&(r.search=h);const p=await fe(t,{...r,id:e});return S(p,x).map(q=>({role:q.role,id:q.role.id}))},K=async(m,b,h)=>{const r=await ne({id:e,type:t,first:m||0,max:b||10,search:h});return S(r.map(p=>({client:{clientId:p.client,id:p.clientId},role:{id:p.id,name:p.role,description:p.description},id:p.id})),({client:{clientId:p},role:{name:P}})=>`${p}${P}`)};return n(ae,{variant:re.large,title:c?o("assignRole"):o("assignRolesTo",{client:i}),isOpen:!0,onClose:d,actions:[n(F,{"data-testid":"assign",isDisabled:u.length===0,variant:"primary",onClick:()=>{l(u),d()},children:o("assign")},"confirm"),n(F,{"data-testid":"cancel",variant:"link",onClick:d,children:o("cancel")},"cancel")],children:n(_,{onSelect:m=>A([...m]),searchPlaceholderKey:"searchByRoleName",isPaginated:!(g==="roles"&&t!=="roles"),searchTypeComponent:I&&n(D,{children:n(Z,{onSelect:()=>{w(g==="roles"?"clients":"roles"),R(!1),k()},"data-testid":"filter-type-dropdown",toggle:n(ee,{onToggle:R,icon:n(oe,{}),children:o(g==="roles"?"filterByRoles":"filterByClients")}),isOpen:v,dropdownItems:[n(te,{"data-testid":g,children:o(g==="roles"?"filterByClients":"filterByRoles")},"filter-type")]})}),canSelectAll:!0,isRadio:s,loader:g==="roles"?a:K,ariaLabelKey:"roles",columns:[{name:"name",cellRenderer:G},{name:"role.description",displayKey:"description"}],emptyState:n(U,{message:o("noRoles"),instructions:o("noRealmRolesToAssign"),secondaryActions:[{text:o("filterByClients"),onClick:()=>{w("clients"),k()}}]})},M)})};export{ue as A,Te as R,G as S};
//# sourceMappingURL=AddRoleMappingModal-uxjjMt5W.js.map
