{"version":3,"file":"FormAccess-EK-4wbwg.js","sources":["../../../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","../../../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Stack/stack.mjs","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Stack/Stack.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js","../../src/components/form/FormAccess.tsx"],"sourcesContent":["import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"clipboardCopy\": \"pf-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-c-clipboard-copy__toggle-icon\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport const ClipboardCopyButton = (_a) => {\n    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { }, removeFindDomNode = false } = _a, props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\", \"onTooltipHidden\", \"removeFindDomNode\"]);\n    return (React.createElement(Tooltip, { trigger: \"mouseenter focus click\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, \"aria-live\": \"polite\", aria: \"none\", content: React.createElement(\"div\", null, children), onTooltipHidden: onTooltipHidden, removeFindDomNode: removeFindDomNode },\n        React.createElement(Button, Object.assign({ type: \"button\", variant: variant, onClick: onClick, \"aria-label\": ariaLabel, id: id, \"aria-labelledby\": `${id} ${textId}` }, props),\n            React.createElement(CopyIcon, null))));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n//# sourceMappingURL=ClipboardCopyButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": `${id} ${contentId}`, \"aria-expanded\": isExpanded }, props), isExpanded ? React.createElement(AngleDownIcon, { \"aria-hidden\": \"true\" }) : React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e.target.innerText, e), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", null, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { PopoverPosition } from '../Popover';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nexport class ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                this.updateText(this.props.children);\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.expandContent = (_event) => {\n            this.setState(prevState => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (text) => {\n            this.setState({ text });\n            this.props.onChange(text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            switchDelay, \n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe, removeFindDomNode } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"switchDelay\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\", \"removeFindDomNode\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, id => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, id => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: this.expandContent, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, { isReadOnly: isReadOnly || this.state.expanded, onChange: this.updateText, value: this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }), removeFindDomNode: removeFindDomNode }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateText }, this.state.text))))))));\n        };\n        this.state = {\n            text: Array.isArray(this.props.children)\n                ? this.props.children.join('')\n                : this.props.children,\n            expanded: this.props.isExpanded,\n            copied: false\n        };\n        if (this.props.switchDelay !== undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('ClipboardCopy: switchDelay prop has been deprecated. ' +\n                'The tooltip message will switch back to the hover tip as soon as the tooltip is hidden.');\n        }\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: PopoverPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true,\n    removeFindDomNode: false\n};\n//# sourceMappingURL=ClipboardCopy.js.map","import './stack.css';\nexport default {\n  \"modifiers\": {\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"stack\": \"pf-l-stack\",\n  \"stackItem\": \"pf-l-stack__item\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport const Stack = (_a) => {\n    var { hasGutter = false, className = '', children = null, component = 'div' } = _a, props = __rest(_a, [\"hasGutter\", \"className\", \"children\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(styles.stack, hasGutter && styles.modifiers.gutter, className) }), children));\n};\nStack.displayName = 'Stack';\n//# sourceMappingURL=Stack.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Stack/stack';\nimport { css } from '@patternfly/react-styles';\nexport const StackItem = (_a) => {\n    var { isFilled = false, className = '', children = null } = _a, props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.stackItem, isFilled && styles.modifiers.fill, className) }), children));\n};\nStackItem.displayName = 'StackItem';\n//# sourceMappingURL=StackItem.js.map","import type { AccessType } from \"@keycloak/keycloak-admin-client/lib/defs/whoAmIRepresentation\";\nimport {\n  ActionGroup,\n  ClipboardCopy,\n  Form,\n  FormGroup,\n  FormProps,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  TextArea,\n} from \"@patternfly/react-core\";\nimport {\n  Children,\n  cloneElement,\n  isValidElement,\n  PropsWithChildren,\n  ReactElement,\n  ReactNode,\n} from \"react\";\nimport { Controller } from \"react-hook-form\";\n\nimport { useAccess } from \"../../context/access/Access\";\n\nexport type FormAccessProps = FormProps & {\n  /**\n   * One of the AccessType's that the user needs to have to view this form. Also see {@link useAccess}.\n   * @type {AccessType}\n   */\n  role: AccessType;\n\n  /**\n   * An override property if fine grained access has been setup for this form.\n   * @type {boolean}\n   */\n  fineGrainedAccess?: boolean;\n\n  /**\n   * Set unWrap when you don't want this component to wrap your \"children\" in a {@link Form} component.\n   * @type {boolean}\n   */\n  unWrap?: boolean;\n\n  /**\n   * Overwrite the fineGrainedAccess and make form regardless of access rights.\n   */\n  isReadOnly?: boolean;\n};\n\n/**\n * Use this in place of a patternfly Form component and add the `role` and `fineGrainedAccess` properties.\n * @param {FormAccessProps} param0 - all properties of Form + role and fineGrainedAccess\n */\nexport const FormAccess = ({\n  children,\n  role,\n  fineGrainedAccess = false,\n  isReadOnly = false,\n  unWrap = false,\n  ...rest\n}: PropsWithChildren<FormAccessProps>) => {\n  const { hasAccess } = useAccess();\n\n  const recursiveCloneChildren = (\n    children: ReactNode,\n    newProps: any,\n  ): ReactNode => {\n    return Children.map(children, (child) => {\n      if (!isValidElement(child)) {\n        return child;\n      }\n\n      if (child.props) {\n        const element = child as ReactElement;\n        if (child.type === Controller) {\n          return cloneElement(child, {\n            ...element.props,\n            render: (props: any) => {\n              const renderElement = element.props.render(props);\n              return cloneElement(renderElement, {\n                ...renderElement.props,\n                ...newProps,\n              });\n            },\n          });\n        }\n        const children = recursiveCloneChildren(\n          element.props.children,\n          newProps,\n        );\n        if (child.type === TextArea) {\n          return cloneElement(child, {\n            readOnly: newProps.isDisabled,\n            children,\n          } as any);\n        }\n\n        return cloneElement(\n          child,\n          child.type === FormGroup ||\n            child.type === GridItem ||\n            child.type === Grid ||\n            child.type === ActionGroup ||\n            child.type === ClipboardCopy ||\n            child.type === Stack ||\n            child.type === StackItem\n            ? { children }\n            : { ...newProps, children },\n        );\n      }\n      return child;\n    });\n  };\n\n  const isDisabled = isReadOnly || (!hasAccess(role) && !fineGrainedAccess);\n\n  return (\n    <>\n      {!unWrap && (\n        <Form {...rest} className={\"keycloak__form \" + (rest.className || \"\")}>\n          {recursiveCloneChildren(children, isDisabled ? { isDisabled } : {})}\n        </Form>\n      )}\n      {unWrap &&\n        recursiveCloneChildren(children, isDisabled ? { isDisabled } : {})}\n    </>\n  );\n};\n"],"names":["styles$1","ClipboardCopyButton","_a","onClick","exitDelay","entryDelay","maxWidth","position","ariaLabel","id","textId","children","variant","onTooltipHidden","removeFindDomNode","props","__rest","React","Tooltip","Button","CopyIcon","ClipboardCopyToggle","contentId","isExpanded","AngleDownIcon","AngleRightIcon","ClipboardCopyExpanded","className","onChange","isReadOnly","isCode","css","styles","e","clipboardCopyFunc","event","text","ClipboardCopyVariant","ClipboardCopy","prevProps","prevState","_event","switchDelay","isBlock","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","additionalActions","ouiaId","ouiaSafe","divProps","textIdPrefix","toggleIdPrefix","contentIdPrefix","getOUIAProps","GenerateId","TextInput","PopoverPosition","Stack","hasGutter","component","Component","StackItem","isFilled","FormAccess","role","fineGrainedAccess","unWrap","rest","hasAccess","useAccess","recursiveCloneChildren","newProps","Children","child","isValidElement","element","Controller","cloneElement","renderElement","TextArea","FormGroup","GridItem","Grid","ActionGroup","isDisabled","jsxs","Fragment","jsx","Form"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}