{"version":3,"file":"KeyValueInput-CbiNnu-2.js","sources":["../../../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/HelperText/helper-text.mjs","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperText.js","../../../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperTextItem.js","../../src/components/key-value-form/KeySelect.tsx","../../src/components/key-value-form/ValueSelect.tsx","../../src/components/key-value-form/KeyValueInput.tsx"],"sourcesContent":["import './helper-text.css';\nexport default {\n  \"helperText\": \"pf-c-helper-text\",\n  \"helperTextItem\": \"pf-c-helper-text__item\",\n  \"helperTextItemIcon\": \"pf-c-helper-text__item-icon\",\n  \"helperTextItemText\": \"pf-c-helper-text__item-text\",\n  \"modifiers\": {\n    \"indeterminate\": \"pf-m-indeterminate\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"error\": \"pf-m-error\",\n    \"dynamic\": \"pf-m-dynamic\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nexport const HelperText = (_a) => {\n    var { children, className, component = 'div', id, isLiveRegion = false } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"id\", \"isLiveRegion\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ id: id, className: css(styles.helperText, className) }, (isLiveRegion && { 'aria-live': 'polite' }), props), children));\n};\nHelperText.displayName = 'HelperText';\n//# sourceMappingURL=HelperText.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nconst variantStyle = {\n    default: '',\n    indeterminate: styles.modifiers.indeterminate,\n    warning: styles.modifiers.warning,\n    success: styles.modifiers.success,\n    error: styles.modifiers.error\n};\nexport const HelperTextItem = (_a) => {\n    var { children, className, component = 'div', variant = 'default', icon, isDynamic = false, hasIcon = isDynamic, id, screenReaderText = `${variant} status` } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"variant\", \"icon\", \"isDynamic\", \"hasIcon\", \"id\", \"screenReaderText\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.helperTextItem, variantStyle[variant], isDynamic && styles.modifiers.dynamic, className), id: id }, props),\n        icon && (React.createElement(\"span\", { className: css(styles.helperTextItemIcon), \"aria-hidden\": true }, icon)),\n        hasIcon && !icon && (React.createElement(\"span\", { className: css(styles.helperTextItemIcon), \"aria-hidden\": true },\n            (variant === 'default' || variant === 'indeterminate') && React.createElement(MinusIcon, null),\n            variant === 'warning' && React.createElement(ExclamationTriangleIcon, null),\n            variant === 'success' && React.createElement(CheckCircleIcon, null),\n            variant === 'error' && React.createElement(ExclamationCircleIcon, null))),\n        React.createElement(\"span\", { className: css(styles.helperTextItemText) },\n            children,\n            isDynamic && React.createElement(\"span\", { className: \"pf-u-screen-reader\" },\n                \": \",\n                screenReaderText,\n                \";\"))));\n};\nHelperTextItem.displayName = 'HelperTextItem';\n//# sourceMappingURL=HelperTextItem.js.map","import { Grid, GridItem, Select, SelectOption } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { UseControllerProps, useController } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { KeycloakTextInput } from \"ui-shared\";\nimport useToggle from \"../../utils/useToggle\";\nimport { DefaultValue } from \"./KeyValueInput\";\n\ntype KeySelectProp = UseControllerProps & {\n  selectItems: DefaultValue[];\n};\n\nexport const KeySelect = ({ selectItems, ...rest }: KeySelectProp) => {\n  const { t } = useTranslation();\n  const [open, toggle] = useToggle();\n  const { field } = useController(rest);\n  const [custom, setCustom] = useState(\n    !selectItems.map(({ key }) => key).includes(field.value),\n  );\n\n  return (\n    <Grid>\n      <GridItem lg={custom ? 2 : 12}>\n        <Select\n          onToggle={() => toggle()}\n          isOpen={open}\n          onSelect={(_, value) => {\n            if (value) {\n              setCustom(false);\n            }\n            field.onChange(value);\n            toggle();\n          }}\n          selections={!custom ? [field.value] : \"\"}\n        >\n          {[\n            <SelectOption key=\"custom\" onClick={() => setCustom(true)}>\n              {t(\"customAttribute\")}\n            </SelectOption>,\n            ...selectItems.map((item) => (\n              <SelectOption key={item.key} value={item.key}>\n                {item.label}\n              </SelectOption>\n            )),\n          ]}\n        </Select>\n      </GridItem>\n      {custom && (\n        <GridItem lg={10}>\n          <KeycloakTextInput\n            id=\"customValue\"\n            data-testid={rest.name}\n            placeholder={t(\"keyPlaceholder\")}\n            value={field.value}\n            onChange={field.onChange}\n            autoFocus\n          />\n        </GridItem>\n      )}\n    </Grid>\n  );\n};\n","import { Select, SelectOption } from \"@patternfly/react-core\";\nimport { useMemo, useState } from \"react\";\nimport { UseControllerProps, useController } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { KeycloakTextInput } from \"ui-shared\";\n\nimport { DefaultValue } from \"./KeyValueInput\";\n\ntype ValueSelectProps = UseControllerProps & {\n  selectItems: DefaultValue[];\n  keyValue: string;\n};\n\nexport const ValueSelect = ({\n  selectItems,\n  keyValue,\n  ...rest\n}: ValueSelectProps) => {\n  const { t } = useTranslation();\n  const { field } = useController(rest);\n  const [open, setOpen] = useState(false);\n\n  const defaultItem = useMemo(\n    () => selectItems.find((v) => v.key === keyValue),\n    [selectItems, keyValue],\n  );\n\n  return defaultItem?.values ? (\n    <Select\n      onToggle={(isOpen) => setOpen(isOpen)}\n      isOpen={open}\n      onSelect={(_, value) => {\n        field.onChange(value);\n        setOpen(false);\n      }}\n      selections={field.value ? [field.value] : t(\"choose\")}\n      placeholder={t(\"valuePlaceholder\")}\n    >\n      {defaultItem.values.map((item) => (\n        <SelectOption key={item} value={item} />\n      ))}\n    </Select>\n  ) : (\n    <KeycloakTextInput id=\"customValue\" data-testid={rest.name} {...field} />\n  );\n};\n","import {\n  ActionList,\n  ActionListItem,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  Grid,\n  GridItem,\n  HelperText,\n  HelperTextItem,\n} from \"@patternfly/react-core\";\nimport { MinusCircleIcon, PlusCircleIcon } from \"@patternfly/react-icons\";\nimport { Fragment } from \"react\";\nimport {\n  FieldValues,\n  useFieldArray,\n  useFormContext,\n  useWatch,\n} from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { KeycloakTextInput } from \"../keycloak-text-input/KeycloakTextInput\";\nimport { KeySelect } from \"./KeySelect\";\nimport { ValueSelect } from \"./ValueSelect\";\n\nexport type DefaultValue = {\n  key: string;\n  values?: string[];\n  label: string;\n};\n\ntype KeyValueInputProps = {\n  name: string;\n  defaultKeyValue?: DefaultValue[];\n};\n\nexport const KeyValueInput = ({\n  name,\n  defaultKeyValue,\n}: KeyValueInputProps) => {\n  const { t } = useTranslation();\n  const {\n    control,\n    register,\n    formState: { errors },\n  } = useFormContext();\n\n  const { fields, append, remove } = useFieldArray({\n    shouldUnregister: true,\n    control,\n    name,\n  });\n\n  const appendNew = () => append({ key: \"\", value: \"\" });\n\n  const values = useWatch<FieldValues>({\n    name,\n    control,\n    defaultValue: [],\n  });\n\n  return fields.length > 0 ? (\n    <>\n      <Grid hasGutter>\n        <GridItem className=\"pf-c-form__label\" span={5}>\n          <span className=\"pf-c-form__label-text\">{t(\"key\")}</span>\n        </GridItem>\n        <GridItem className=\"pf-c-form__label\" span={7}>\n          <span className=\"pf-c-form__label-text\">{t(\"value\")}</span>\n        </GridItem>\n        {fields.map((attribute, index) => {\n          const keyError = !!(errors as any)[name]?.[index]?.key;\n          const valueError = !!(errors as any)[name]?.[index]?.value;\n\n          return (\n            <Fragment key={attribute.id}>\n              <GridItem span={5}>\n                {defaultKeyValue ? (\n                  <KeySelect\n                    name={`${name}.${index}.key`}\n                    selectItems={defaultKeyValue}\n                    rules={{ required: true }}\n                  />\n                ) : (\n                  <KeycloakTextInput\n                    placeholder={t(\"keyPlaceholder\")}\n                    aria-label={t(\"key\")}\n                    data-testid={`${name}-key`}\n                    {...register(`${name}.${index}.key`, { required: true })}\n                    validated={keyError ? \"error\" : \"default\"}\n                    isRequired\n                  />\n                )}\n                {keyError && (\n                  <HelperText>\n                    <HelperTextItem variant=\"error\">\n                      {t(\"keyError\")}\n                    </HelperTextItem>\n                  </HelperText>\n                )}\n              </GridItem>\n              <GridItem span={5}>\n                {defaultKeyValue ? (\n                  <ValueSelect\n                    name={`${name}.${index}.value`}\n                    keyValue={values[index]?.key}\n                    selectItems={defaultKeyValue}\n                    rules={{ required: true }}\n                  />\n                ) : (\n                  <KeycloakTextInput\n                    placeholder={t(\"valuePlaceholder\")}\n                    aria-label={t(\"value\")}\n                    data-testid={`${name}-value`}\n                    {...register(`${name}.${index}.value`, { required: true })}\n                    validated={valueError ? \"error\" : \"default\"}\n                    isRequired\n                  />\n                )}\n                {valueError && (\n                  <HelperText>\n                    <HelperTextItem variant=\"error\">\n                      {t(\"valueError\")}\n                    </HelperTextItem>\n                  </HelperText>\n                )}\n              </GridItem>\n              <GridItem span={2}>\n                <Button\n                  variant=\"link\"\n                  title={t(\"removeAttribute\")}\n                  onClick={() => remove(index)}\n                  data-testid={`${name}-remove`}\n                >\n                  <MinusCircleIcon />\n                </Button>\n              </GridItem>\n            </Fragment>\n          );\n        })}\n      </Grid>\n      <ActionList>\n        <ActionListItem>\n          <Button\n            data-testid={`${name}-add-row`}\n            className=\"pf-u-px-0 pf-u-mt-sm\"\n            variant=\"link\"\n            icon={<PlusCircleIcon />}\n            onClick={appendNew}\n          >\n            {t(\"addAttribute\")}\n          </Button>\n        </ActionListItem>\n      </ActionList>\n    </>\n  ) : (\n    <EmptyState\n      data-testid={`${name}-empty-state`}\n      className=\"pf-u-p-0\"\n      variant=\"xs\"\n    >\n      <EmptyStateBody>{t(\"missingAttributes\")}</EmptyStateBody>\n      <Button\n        data-testid={`${name}-add-row`}\n        variant=\"link\"\n        icon={<PlusCircleIcon />}\n        isSmall\n        onClick={appendNew}\n      >\n        {t(\"addAttribute\")}\n      </Button>\n    </EmptyState>\n  );\n};\n"],"names":["styles","HelperText","_a","children","className","component","id","isLiveRegion","props","__rest","Component","React","css","variantStyle","HelperTextItem","variant","icon","isDynamic","hasIcon","screenReaderText","MinusIcon","ExclamationTriangleIcon","CheckCircleIcon","ExclamationCircleIcon","KeySelect","selectItems","rest","t","useTranslation","open","toggle","useToggle","field","useController","custom","setCustom","useState","key","Grid","jsx","GridItem","Select","_","value","SelectOption","item","KeycloakTextInput","ValueSelect","keyValue","setOpen","defaultItem","useMemo","v","isOpen","KeyValueInput","name","defaultKeyValue","control","register","errors","useFormContext","fields","append","remove","useFieldArray","appendNew","values","useWatch","jsxs","Fragment","attribute","index","keyError","valueError","Button","MinusCircleIcon","ActionList","ActionListItem","PlusCircleIcon","EmptyState","EmptyStateBody"],"mappings":"yjBACA,MAAeA,EAAA,CACb,WAAc,mBACd,eAAkB,yBAClB,mBAAsB,8BACtB,mBAAsB,8BACtB,UAAa,CACX,cAAiB,qBACjB,QAAW,eACX,QAAW,eACX,MAAS,aACT,QAAW,cACZ,EACD,UAAa,eACf,ECVaC,EAAcC,GAAO,CAC9B,GAAI,CAAE,SAAAC,EAAU,UAAAC,EAAW,UAAAC,EAAY,MAAO,GAAAC,EAAI,aAAAC,EAAe,IAAUL,EAAIM,EAAQC,EAAOP,EAAI,CAAC,WAAY,YAAa,YAAa,KAAM,cAAc,CAAC,EAC9J,MAAMQ,EAAYL,EAClB,OAAQM,EAAM,cAAcD,EAAW,OAAO,OAAO,CAAE,GAAIJ,EAAI,UAAWM,EAAIZ,EAAO,WAAYI,CAAS,CAAG,EAAGG,GAAgB,CAAE,YAAa,UAAaC,CAAK,EAAGL,CAAQ,CAChL,EACAF,EAAW,YAAc,aCDzB,MAAMY,EAAe,CACjB,QAAS,GACT,cAAeb,EAAO,UAAU,cAChC,QAASA,EAAO,UAAU,QAC1B,QAASA,EAAO,UAAU,QAC1B,MAAOA,EAAO,UAAU,KAC5B,EACac,EAAkBZ,GAAO,CAClC,GAAI,CAAE,SAAAC,EAAU,UAAAC,EAAW,UAAAC,EAAY,MAAO,QAAAU,EAAU,UAAW,KAAAC,EAAM,UAAAC,EAAY,GAAO,QAAAC,EAAUD,EAAW,GAAAX,EAAI,iBAAAa,EAAmB,GAAGJ,CAAO,SAAW,EAAGb,EAAIM,EAAQC,EAAOP,EAAI,CAAC,WAAY,YAAa,YAAa,UAAW,OAAQ,YAAa,UAAW,KAAM,kBAAkB,CAAC,EAClS,MAAMQ,EAAYL,EAClB,OAAQM,EAAM,cAAcD,EAAW,OAAO,OAAO,CAAE,UAAWE,EAAIZ,EAAO,eAAgBa,EAAaE,CAAO,EAAGE,GAAajB,EAAO,UAAU,QAASI,CAAS,EAAG,GAAIE,CAAI,EAAEE,CAAK,EAClLQ,GAASL,EAAM,cAAc,OAAQ,CAAE,UAAWC,EAAIZ,EAAO,kBAAkB,EAAG,cAAe,EAAM,EAAEgB,CAAI,EAC7GE,GAAW,CAACF,GAASL,EAAM,cAAc,OAAQ,CAAE,UAAWC,EAAIZ,EAAO,kBAAkB,EAAG,cAAe,EAAM,GAC9Ge,IAAY,WAAaA,IAAY,kBAAoBJ,EAAM,cAAcS,EAAW,IAAI,EAC7FL,IAAY,WAAaJ,EAAM,cAAcU,EAAyB,IAAI,EAC1EN,IAAY,WAAaJ,EAAM,cAAcW,EAAiB,IAAI,EAClEP,IAAY,SAAWJ,EAAM,cAAcY,EAAuB,IAAI,CAAC,EAC3EZ,EAAM,cAAc,OAAQ,CAAE,UAAWC,EAAIZ,EAAO,kBAAkB,CAAG,EACrEG,EACAc,GAAaN,EAAM,cAAc,OAAQ,CAAE,UAAW,oBAAsB,EACxE,KACAQ,EACA,GAAG,CAAC,CAAC,CACrB,EACAL,EAAe,YAAc,iBCpBtB,MAAMU,EAAY,CAAC,CAAE,YAAAC,EAAa,GAAGC,KAA0B,CAC9D,KAAA,CAAE,EAAAC,GAAMC,IACR,CAACC,EAAMC,CAAM,EAAIC,EAAU,EAC3B,CAAE,MAAAC,CAAA,EAAUC,EAAcP,CAAI,EAC9B,CAACQ,EAAQC,CAAS,EAAIC,EAC1B,CAACX,EAAY,IAAI,CAAC,CAAE,IAAAY,CAAI,IAAMA,CAAG,EAAE,SAASL,EAAM,KAAK,CAAA,EAGzD,SACGM,EACC,CAAA,SAAA,CAAAC,EAACC,EAAS,CAAA,GAAIN,EAAS,EAAI,GACzB,SAAAK,EAACE,EAAA,CACC,SAAU,IAAMX,EAAO,EACvB,OAAQD,EACR,SAAU,CAACa,EAAGC,IAAU,CAClBA,GACFR,EAAU,EAAK,EAEjBH,EAAM,SAASW,CAAK,EACbb,GACT,EACA,WAAaI,EAAyB,GAAhB,CAACF,EAAM,KAAK,EAEjC,SAAA,CACCO,EAACK,EAA0B,CAAA,QAAS,IAAMT,EAAU,EAAI,EACrD,SAAAR,EAAE,iBAAiB,CAAA,EADJ,QAElB,EACA,GAAGF,EAAY,IAAKoB,GACjBN,EAAAK,EAAA,CAA4B,MAAOC,EAAK,IACtC,SAAAA,EAAK,KADW,EAAAA,EAAK,GAExB,CACD,CACH,CAAA,CAAA,EAEJ,EACCX,GACCK,EAACC,EAAS,CAAA,GAAI,GACZ,SAAAD,EAACO,EAAA,CACC,GAAG,cACH,cAAapB,EAAK,KAClB,YAAaC,EAAE,gBAAgB,EAC/B,MAAOK,EAAM,MACb,SAAUA,EAAM,SAChB,UAAS,EAAA,CAAA,EAEb,CAEJ,CAAA,CAAA,CAEJ,EChDae,EAAc,CAAC,CAC1B,YAAAtB,EACA,SAAAuB,EACA,GAAGtB,CACL,IAAwB,CAChB,KAAA,CAAE,EAAAC,GAAMC,IACR,CAAE,MAAAI,CAAA,EAAUC,EAAcP,CAAI,EAC9B,CAACG,EAAMoB,CAAO,EAAIb,EAAS,EAAK,EAEhCc,EAAcC,EAClB,IAAM1B,EAAY,KAAM2B,GAAMA,EAAE,MAAQJ,CAAQ,EAChD,CAACvB,EAAauB,CAAQ,CAAA,EAGxB,OAAOE,GAAa,OAClBX,EAACE,EAAA,CACC,SAAWY,GAAWJ,EAAQI,CAAM,EACpC,OAAQxB,EACR,SAAU,CAACa,EAAGC,IAAU,CACtBX,EAAM,SAASW,CAAK,EACpBM,EAAQ,EAAK,CACf,EACA,WAAYjB,EAAM,MAAQ,CAACA,EAAM,KAAK,EAAIL,EAAE,QAAQ,EACpD,YAAaA,EAAE,kBAAkB,EAEhC,SAAAuB,EAAY,OAAO,IAAKL,KACtBD,EAAwB,CAAA,MAAOC,CAAb,EAAAA,CAAmB,CACvC,CAAA,CACH,IAECC,EAAkB,CAAA,GAAG,cAAc,cAAapB,EAAK,KAAO,GAAGM,CAAO,CAAA,CAE3E,ECTasB,GAAgB,CAAC,CAC5B,KAAAC,EACA,gBAAAC,CACF,IAA0B,CAClB,KAAA,CAAE,EAAA7B,GAAMC,IACR,CACJ,QAAA6B,EACA,SAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,EAAe,EAEb,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,OAAAC,CAAA,EAAWC,EAAc,CAC/C,iBAAkB,GAClB,QAAAP,EACA,KAAAF,CAAA,CACD,EAEKU,EAAY,IAAMH,EAAO,CAAE,IAAK,GAAI,MAAO,GAAI,EAE/CI,EAASC,EAAsB,CACnC,KAAAZ,EACA,QAAAE,EACA,aAAc,CAAC,CAAA,CAChB,EAEM,OAAAI,EAAO,OAAS,EAEnBO,EAAAC,EAAA,CAAA,SAAA,CAACD,EAAA9B,EAAA,CAAK,UAAS,GACb,SAAA,CAAAC,EAACC,EAAS,CAAA,UAAU,mBAAmB,KAAM,EAC3C,SAAAD,EAAC,OAAK,CAAA,UAAU,wBAAyB,SAAAZ,EAAE,KAAK,CAAE,CAAA,EACpD,EACCY,EAAAC,EAAA,CAAS,UAAU,mBAAmB,KAAM,EAC3C,SAACD,EAAA,OAAA,CAAK,UAAU,wBAAyB,SAAEZ,EAAA,OAAO,CAAE,CAAA,EACtD,EACCkC,EAAO,IAAI,CAACS,EAAWC,IAAU,CAChC,MAAMC,EAAW,CAAC,CAAEb,EAAeJ,CAAI,IAAIgB,CAAK,GAAG,IAC7CE,EAAa,CAAC,CAAEd,EAAeJ,CAAI,IAAIgB,CAAK,GAAG,MAGnD,OAAAH,EAACC,EAAA,CACC,SAAA,CAACD,EAAA5B,EAAA,CAAS,KAAM,EACb,SAAA,CACCgB,EAAAjB,EAACf,EAAA,CACC,KAAM,GAAG+B,CAAI,IAAIgB,CAAK,OACtB,YAAaf,EACb,MAAO,CAAE,SAAU,EAAK,CAAA,CAAA,EAG1BjB,EAACO,EAAA,CACC,YAAanB,EAAE,gBAAgB,EAC/B,aAAYA,EAAE,KAAK,EACnB,cAAa,GAAG4B,CAAI,OACnB,GAAGG,EAAS,GAAGH,CAAI,IAAIgB,CAAK,OAAQ,CAAE,SAAU,GAAM,EACvD,UAAWC,EAAW,QAAU,UAChC,WAAU,EAAA,CACZ,EAEDA,GACEjC,EAAAtC,EAAA,CACC,SAACsC,EAAAzB,EAAA,CAAe,QAAQ,QACrB,SAAAa,EAAE,UAAU,CAAA,CACf,CACF,CAAA,CAAA,EAEJ,EACAyC,EAAC5B,EAAS,CAAA,KAAM,EACb,SAAA,CACCgB,EAAAjB,EAACQ,EAAA,CACC,KAAM,GAAGQ,CAAI,IAAIgB,CAAK,SACtB,SAAUL,EAAOK,CAAK,GAAG,IACzB,YAAaf,EACb,MAAO,CAAE,SAAU,EAAK,CAAA,CAAA,EAG1BjB,EAACO,EAAA,CACC,YAAanB,EAAE,kBAAkB,EACjC,aAAYA,EAAE,OAAO,EACrB,cAAa,GAAG4B,CAAI,SACnB,GAAGG,EAAS,GAAGH,CAAI,IAAIgB,CAAK,SAAU,CAAE,SAAU,GAAM,EACzD,UAAWE,EAAa,QAAU,UAClC,WAAU,EAAA,CACZ,EAEDA,GACElC,EAAAtC,EAAA,CACC,SAACsC,EAAAzB,EAAA,CAAe,QAAQ,QACrB,SAAAa,EAAE,YAAY,CAAA,CACjB,CACF,CAAA,CAAA,EAEJ,EACAY,EAACC,EAAS,CAAA,KAAM,EACd,SAAAD,EAACmC,EAAA,CACC,QAAQ,OACR,MAAO/C,EAAE,iBAAiB,EAC1B,QAAS,IAAMoC,EAAOQ,CAAK,EAC3B,cAAa,GAAGhB,CAAI,UAEpB,WAACoB,EAAgB,EAAA,CAAA,CAAA,EAErB,CAAA,GA7DaL,EAAU,EA8DzB,CAAA,CAEH,CAAA,EACH,EACA/B,EAACqC,EACC,CAAA,SAAArC,EAACsC,EACC,CAAA,SAAAtC,EAACmC,EAAA,CACC,cAAa,GAAGnB,CAAI,WACpB,UAAU,uBACV,QAAQ,OACR,OAAOuB,EAAe,EAAA,EACtB,QAASb,EAER,WAAE,cAAc,CAAA,GAErB,CACF,CAAA,CAAA,CAAA,CACF,EAEAG,EAACW,EAAA,CACC,cAAa,GAAGxB,CAAI,eACpB,UAAU,WACV,QAAQ,KAER,SAAA,CAAChB,EAAAyC,EAAA,CAAgB,SAAErD,EAAA,mBAAmB,CAAE,CAAA,EACxCY,EAACmC,EAAA,CACC,cAAa,GAAGnB,CAAI,WACpB,QAAQ,OACR,OAAOuB,EAAe,EAAA,EACtB,QAAO,GACP,QAASb,EAER,WAAE,cAAc,CAAA,CACnB,CAAA,CAAA,CAAA,CAGN","x_google_ignoreList":[0,1,2]}