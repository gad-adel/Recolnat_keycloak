import{jsxs as l,Fragment as d,jsx as r}from"react/jsx-runtime";import{u,d as S,e as f,f as g,P as i,H as h,j as n,A as C,ag as v}from"./index-sihFV1NS.js";import{c as w}from"./ClientScopeTypes-Hwl8E8GJ.js";import{V as y}from"./ViewHeader-xo54NRb6.js";import{S as b}from"./ScopeForm-5ax7VntI.js";import"react";import"react-dom";import"./ToolbarContent-46I9Yg7h.js";import"./utils-9X4NJJvK.js";import"./SwitchControl-KreblmOr.js";import"./FormAccess-EK-4wbwg.js";import"./copy-icon-WaWzxYgU.js";import"./Form-bfj-xQZn.js";import"./KeycloakTextArea-NBwG1p2x.js";import"./KeycloakTextInput--S1SG2UN.js";import"./useIsFeatureEnabled-qmmJPqO8.js";function z(){const{t:a}=u(),s=S(),{realm:c}=f(),{addAlert:m,addError:p}=g();return l(d,{children:[r(y,{titleKey:"createClientScope"}),r(i,{variant:"light",className:"pf-u-p-0",children:r(i,{variant:"light",children:r(b,{save:async o=>{const t=h({...o,name:o.name?.trim().replace(/ /g,"_")});try{await n.clientScopes.create(t);const e=await n.clientScopes.findOneByName({name:t.name});if(!e)throw new Error(a("notFound"));await w({...t,id:e.id},t.type),m(a("createClientScopeSuccess",C.success)),s(v({realm:c,id:e.id,tab:"settings"}))}catch(e){p("createClientScopeError",e)}}})})})]})}export{z as default};
//# sourceMappingURL=CreateClientScope-olASqyWT.js.map
