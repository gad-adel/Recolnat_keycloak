{"version":3,"file":"resource-BRtaBrSc.js","sources":["../../src/components/role-mapping/resource.ts"],"sourcesContent":["import type UserRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/userRepresentation\";\n\nimport { fetchAdminUI } from \"../../context/auth/admin-ui-endpoint\";\n\ntype IDQuery = {\n  id: string;\n  type: string;\n};\n\ntype PaginatingQuery = IDQuery & {\n  first: number;\n  max: number;\n  search?: string;\n};\n\ntype EffectiveClientRolesQuery = IDQuery;\n\ntype Query = Partial<Omit<PaginatingQuery, \"adminClient\">> & {\n  endpoint: string;\n};\n\ntype ClientRole = {\n  id: string;\n  role: string;\n  description?: string;\n  client: string;\n  clientId: string;\n};\n\nconst fetchEndpoint = async ({\n  id,\n  type,\n  first,\n  max,\n  search,\n  endpoint,\n}: Query): Promise<any> =>\n  fetchAdminUI(`/ui-ext/${endpoint}/${type}/${id}`, {\n    first: (first || 0).toString(),\n    max: (max || 10).toString(),\n    search: search || \"\",\n  });\n\nexport const getAvailableClientRoles = (\n  query: PaginatingQuery,\n): Promise<ClientRole[]> =>\n  fetchEndpoint({ ...query, endpoint: \"available-roles\" });\n\nexport const getEffectiveClientRoles = (\n  query: EffectiveClientRolesQuery,\n): Promise<ClientRole[]> =>\n  fetchEndpoint({ ...query, endpoint: \"effective-roles\" });\n\ntype UserQuery = {\n  lastName?: string;\n  firstName?: string;\n  email?: string;\n  username?: string;\n  emailVerified?: boolean;\n  idpAlias?: string;\n  idpUserId?: string;\n  enabled?: boolean;\n  briefRepresentation?: boolean;\n  exact?: boolean;\n  q?: string;\n};\n\nexport type BruteUser = UserRepresentation & {\n  bruteForceStatus?: Record<string, object>;\n};\n\nexport const findUsers = (query: UserQuery): Promise<BruteUser[]> =>\n  fetchAdminUI(\"ui-ext/brute-force-user\", query as Record<string, string>);\n\nexport const fetchUsedBy = (query: PaginatingQuery): Promise<string[]> =>\n  fetchEndpoint({ ...query, endpoint: \"authentication-management\" });\n"],"names":["fetchEndpoint","id","type","first","max","search","endpoint","fetchAdminUI","getAvailableClientRoles","query","getEffectiveClientRoles","findUsers","fetchUsedBy"],"mappings":"yCA6BA,MAAMA,EAAgB,MAAO,CAC3B,GAAAC,EACA,KAAAC,EACA,MAAAC,EACA,IAAAC,EACA,OAAAC,EACA,SAAAC,CACF,IACEC,EAAa,WAAWD,CAAQ,IAAIJ,CAAI,IAAID,CAAE,GAAI,CAChD,OAAQE,GAAS,GAAG,SAAS,EAC7B,KAAMC,GAAO,IAAI,SAAS,EAC1B,OAAQC,GAAU,EACpB,CAAC,EAEUG,EACXC,GAEAT,EAAc,CAAE,GAAGS,EAAO,SAAU,kBAAmB,EAE5CC,EACXD,GAEAT,EAAc,CAAE,GAAGS,EAAO,SAAU,kBAAmB,EAoB5CE,EAAaF,GACxBF,EAAa,0BAA2BE,CAA+B,EAE5DG,EAAeH,GAC1BT,EAAc,CAAE,GAAGS,EAAO,SAAU,2BAA6B,CAAA"}