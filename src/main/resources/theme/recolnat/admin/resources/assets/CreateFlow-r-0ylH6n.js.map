{"version":3,"file":"CreateFlow-r-0ylH6n.js","sources":["../../src/authentication/form/FlowType.tsx","../../src/authentication/form/CreateFlow.tsx"],"sourcesContent":["import AuthenticationFlowRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/authenticationFlowRepresentation\";\nimport {\n  FormGroup,\n  Select,\n  SelectOption,\n  SelectVariant,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { HelpItem } from \"ui-shared\";\n\nconst TYPES = [\"basic-flow\", \"client-flow\"] as const;\n\nexport const FlowType = () => {\n  const { t } = useTranslation();\n  const { control } = useFormContext<AuthenticationFlowRepresentation>();\n  const [open, setOpen] = useState(false);\n\n  return (\n    <FormGroup\n      label={t(\"flowType\")}\n      labelIcon={\n        <HelpItem\n          helpText={t(\"topLevelFlowTypeHelp\")}\n          fieldLabelId=\"flowType\"\n        />\n      }\n      fieldId=\"flowType\"\n    >\n      <Controller\n        name=\"providerId\"\n        defaultValue={TYPES[0]}\n        control={control}\n        render={({ field }) => (\n          <Select\n            toggleId=\"flowType\"\n            onToggle={setOpen}\n            onSelect={(_, value) => {\n              field.onChange(value.toString());\n              setOpen(false);\n            }}\n            selections={t(`top-level-flow-type.${field.value}`)}\n            variant={SelectVariant.single}\n            aria-label={t(\"flowType\")}\n            isOpen={open}\n          >\n            {TYPES.map((type) => (\n              <SelectOption\n                key={type}\n                selected={type === field.value}\n                value={type}\n              >\n                {t(`top-level-flow-type.${type}`)}\n              </SelectOption>\n            ))}\n          </Select>\n        )}\n      />\n    </FormGroup>\n  );\n};\n","import type AuthenticationFlowRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/authenticationFlowRepresentation\";\nimport {\n  ActionGroup,\n  AlertVariant,\n  Button,\n  PageSection,\n} from \"@patternfly/react-core\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nimport { adminClient } from \"../../admin-client\";\nimport { useAlerts } from \"../../components/alert/Alerts\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toAuthentication } from \"../routes/Authentication\";\nimport { toFlow } from \"../routes/Flow\";\nimport { FlowType } from \"./FlowType\";\nimport { NameDescription } from \"./NameDescription\";\n\nexport default function CreateFlow() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { realm } = useRealm();\n  const { addAlert } = useAlerts();\n  const form = useForm<AuthenticationFlowRepresentation>();\n  const { handleSubmit } = form;\n\n  const onSubmit = async (formValues: AuthenticationFlowRepresentation) => {\n    const flow = { ...formValues, builtIn: false, topLevel: true };\n\n    try {\n      const { id } =\n        await adminClient.authenticationManagement.createFlow(flow);\n      addAlert(t(\"flowCreatedSuccess\"), AlertVariant.success);\n      navigate(\n        toFlow({\n          realm,\n          id: id!,\n          usedBy: \"notInUse\",\n        }),\n      );\n    } catch (error: any) {\n      addAlert(\n        t(\"flowCreateError\", {\n          error: error.response?.data?.errorMessage || error,\n        }),\n        AlertVariant.danger,\n      );\n    }\n  };\n\n  return (\n    <>\n      <ViewHeader titleKey=\"createFlow\" subKey=\"authenticationCreateFlowHelp\" />\n      <PageSection variant=\"light\">\n        <FormProvider {...form}>\n          <FormAccess\n            isHorizontal\n            role=\"manage-authorization\"\n            onSubmit={handleSubmit(onSubmit)}\n          >\n            <NameDescription />\n            <FlowType />\n            <ActionGroup>\n              <Button data-testid=\"create\" type=\"submit\">\n                {t(\"create\")}\n              </Button>\n              <Button\n                data-testid=\"cancel\"\n                variant=\"link\"\n                component={(props) => (\n                  <Link {...props} to={toAuthentication({ realm })}></Link>\n                )}\n              >\n                {t(\"cancel\")}\n              </Button>\n            </ActionGroup>\n          </FormAccess>\n        </FormProvider>\n      </PageSection>\n    </>\n  );\n}\n"],"names":["TYPES","FlowType","useTranslation","control","useFormContext","open","setOpen","useState","jsx","FormGroup","HelpItem","Controller","field","Select","_","value","SelectVariant","type","SelectOption","CreateFlow","navigate","useNavigate","realm","useRealm","addAlert","useAlerts","form","useForm","handleSubmit","jsxs","Fragment","ViewHeader","PageSection","FormProvider","FormAccess","formValues","flow","id","adminClient","AlertVariant","toFlow","error","NameDescription","ActionGroup","Button","props","Link","toAuthentication"],"mappings":"wlBAaA,MAAMA,EAAQ,CAAC,aAAc,aAAa,EAE7BC,EAAW,IAAM,CACtB,KAAA,CAAE,GAAMC,IACR,CAAE,QAAAC,GAAYC,IACd,CAACC,EAAMC,CAAO,EAAIC,EAAS,EAAK,EAGpC,OAAAC,EAACC,EAAA,CACC,MAAO,EAAE,UAAU,EACnB,UACED,EAACE,EAAA,CACC,SAAU,EAAE,sBAAsB,EAClC,aAAa,UAAA,CACf,EAEF,QAAQ,WAER,SAAAF,EAACG,EAAA,CACC,KAAK,aACL,aAAcX,EAAM,CAAC,EACrB,QAAAG,EACA,OAAQ,CAAC,CAAE,MAAAS,CAAA,IACTJ,EAACK,EAAA,CACC,SAAS,WACT,SAAUP,EACV,SAAU,CAACQ,EAAGC,IAAU,CAChBH,EAAA,SAASG,EAAM,SAAU,CAAA,EAC/BT,EAAQ,EAAK,CACf,EACA,WAAY,EAAE,uBAAuBM,EAAM,KAAK,EAAE,EAClD,QAASI,EAAc,OACvB,aAAY,EAAE,UAAU,EACxB,OAAQX,EAEP,SAAAL,EAAM,IAAKiB,GACVT,EAACU,EAAA,CAEC,SAAUD,IAASL,EAAM,MACzB,MAAOK,EAEN,SAAA,EAAE,uBAAuBA,CAAI,EAAE,CAAA,EAJ3BA,CAAA,CAMR,CAAA,CACH,CAAA,CAEJ,CAAA,CAAA,CAGN,ECzCA,SAAwBE,GAAa,CAC7B,KAAA,CAAE,GAAMjB,IACRkB,EAAWC,IACX,CAAE,MAAAC,GAAUC,IACZ,CAAE,SAAAC,GAAaC,IACfC,EAAOC,IACP,CAAE,aAAAC,CAAiB,EAAAF,EA0BzB,OAEIG,EAAAC,EAAA,CAAA,SAAA,CAAAtB,EAACuB,EAAW,CAAA,SAAS,aAAa,OAAO,+BAA+B,IACvEC,EAAY,CAAA,QAAQ,QACnB,SAACxB,EAAAyB,EAAA,CAAc,GAAGP,EAChB,SAAAG,EAACK,EAAA,CACC,aAAY,GACZ,KAAK,uBACL,SAAUN,EAhCH,MAAOO,GAAiD,CACvE,MAAMC,EAAO,CAAE,GAAGD,EAAY,QAAS,GAAO,SAAU,IAEpD,GAAA,CACF,KAAM,CAAE,GAAAE,CAAG,EACT,MAAMC,EAAY,yBAAyB,WAAWF,CAAI,EAC5DZ,EAAS,EAAE,oBAAoB,EAAGe,EAAa,OAAO,EACtDnB,EACEoB,EAAO,CACL,MAAAlB,EACA,GAAAe,EACA,OAAQ,UAAA,CACT,CAAA,QAEII,EAAY,CACnBjB,EACE,EAAE,kBAAmB,CACnB,MAAOiB,EAAM,UAAU,MAAM,cAAgBA,CAAA,CAC9C,EACDF,EAAa,MAAA,CAEjB,CAAA,CAWuC,EAE/B,SAAA,CAAA/B,EAACkC,EAAgB,EAAA,IAChBzC,EAAS,EAAA,IACT0C,EACC,CAAA,SAAA,CAAAnC,EAACoC,GAAO,cAAY,SAAS,KAAK,SAC/B,SAAA,EAAE,QAAQ,EACb,EACApC,EAACoC,EAAA,CACC,cAAY,SACZ,QAAQ,OACR,UAAYC,GACVrC,EAACsC,EAAM,CAAA,GAAGD,EAAO,GAAIE,EAAiB,CAAE,MAAAzB,CAAM,CAAC,CAAG,CAAA,EAGnD,WAAE,QAAQ,CAAA,CACb,CAAA,EACF,CAAA,CAAA,GAEJ,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}