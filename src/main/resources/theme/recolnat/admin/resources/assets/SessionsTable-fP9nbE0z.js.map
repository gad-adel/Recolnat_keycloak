{"version":3,"file":"SessionsTable-fP9nbE0z.js","sources":["../../../../node_modules/.pnpm/@patternfly+react-icons@4.93.7_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-icons/dist/esm/icons/cubes-icon.js","../../src/sessions/SessionsTable.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CubesIconConfig = {\n  name: 'CubesIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CubesIcon = createIcon(CubesIconConfig);\n\nexport default CubesIcon;","import type UserSessionRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/userSessionRepresentation\";\nimport {\n  Button,\n  List,\n  ListItem,\n  ListVariant,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { CubesIcon } from \"@patternfly/react-icons\";\nimport { ReactNode, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useMatch, useNavigate } from \"react-router-dom\";\n\nimport { adminClient } from \"../admin-client\";\nimport { toClient } from \"../clients/routes/Client\";\nimport { useAlerts } from \"../components/alert/Alerts\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ListEmptyState } from \"../components/list-empty-state/ListEmptyState\";\nimport {\n  Action,\n  Field,\n  KeycloakDataTable,\n  LoaderFunction,\n} from \"../components/table-toolbar/KeycloakDataTable\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useWhoAmI } from \"../context/whoami/WhoAmI\";\nimport { keycloak } from \"../keycloak\";\nimport { toUser, UserRoute } from \"../user/routes/User\";\nimport { toUsers } from \"../user/routes/Users\";\nimport { isLightweightUser } from \"../user/utils\";\nimport useFormatDate from \"../utils/useFormatDate\";\n\nexport type ColumnName =\n  | \"username\"\n  | \"start\"\n  | \"lastAccess\"\n  | \"clients\"\n  | \"type\";\n\nexport type SessionsTableProps = {\n  loader: LoaderFunction<UserSessionRepresentation>;\n  hiddenColumns?: ColumnName[];\n  emptyInstructions?: string;\n  logoutUser?: string;\n  filter?: ReactNode;\n  isSearching?: boolean;\n  isPaginated?: boolean;\n};\n\nconst UsernameCell = (row: UserSessionRepresentation) => {\n  const { realm } = useRealm();\n  return (\n    <Link to={toUser({ realm, id: row.userId!, tab: \"sessions\" })}>\n      {row.username}\n    </Link>\n  );\n};\n\nconst ClientsCell = (row: UserSessionRepresentation) => {\n  const { realm } = useRealm();\n  return (\n    <List variant={ListVariant.inline}>\n      {Object.entries(row.clients!).map(([clientId, client]) => (\n        <ListItem key={clientId}>\n          <Link to={toClient({ realm, clientId, tab: \"sessions\" })}>\n            {client}\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default function SessionsTable({\n  loader,\n  hiddenColumns = [],\n  emptyInstructions,\n  logoutUser,\n  filter,\n  isSearching,\n  isPaginated,\n}: SessionsTableProps) {\n  const { realm } = useRealm();\n  const { whoAmI } = useWhoAmI();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { addError } = useAlerts();\n  const formatDate = useFormatDate();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey((value) => value + 1);\n  const isOnUserPage = !!useMatch(UserRoute.path);\n\n  const columns = useMemo(() => {\n    const defaultColumns: Field<UserSessionRepresentation>[] = [\n      {\n        name: \"username\",\n        displayKey: \"user\",\n        cellRenderer: UsernameCell,\n      },\n      {\n        name: \"type\",\n        displayKey: \"type\",\n      },\n      {\n        name: \"start\",\n        displayKey: \"started\",\n        cellRenderer: (row) => formatDate(new Date(row.start!)),\n      },\n      {\n        name: \"lastAccess\",\n        displayKey: \"lastAccess\",\n        cellRenderer: (row) => formatDate(new Date(row.lastAccess!)),\n      },\n      {\n        name: \"ipAddress\",\n        displayKey: \"ipAddress\",\n      },\n      {\n        name: \"clients\",\n        displayKey: \"clients\",\n        cellRenderer: ClientsCell,\n      },\n    ];\n\n    return defaultColumns.filter(\n      ({ name }) => !hiddenColumns.includes(name as ColumnName),\n    );\n  }, [realm, hiddenColumns]);\n\n  const [toggleLogoutDialog, LogoutConfirm] = useConfirmDialog({\n    titleKey: \"logoutAllSessions\",\n    messageKey: \"logoutAllDescription\",\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.users.logout({ id: logoutUser! });\n        if (isOnUserPage && isLightweightUser(logoutUser)) {\n          navigate(toUsers({ realm: realm }));\n        } else {\n          refresh();\n        }\n      } catch (error) {\n        addError(\"logoutAllSessionsError\", error);\n      }\n    },\n  });\n\n  async function onClickSignOut(session: UserSessionRepresentation) {\n    await adminClient.realms.deleteSession({ realm, session: session.id! });\n\n    if (session.userId === whoAmI.getUserId()) {\n      await keycloak.logout({ redirectUri: \"\" });\n    } else if (isOnUserPage && isLightweightUser(session.userId)) {\n      navigate(toUsers({ realm: realm }));\n    } else {\n      refresh();\n    }\n  }\n\n  return (\n    <>\n      <LogoutConfirm />\n      <KeycloakDataTable\n        key={key}\n        loader={loader}\n        ariaLabelKey=\"titleSessions\"\n        searchPlaceholderKey=\"searchForSession\"\n        isPaginated={isPaginated}\n        isSearching={isSearching}\n        searchTypeComponent={filter}\n        toolbarItem={\n          logoutUser && (\n            <ToolbarItem>\n              <Button onClick={toggleLogoutDialog}>\n                {t(\"logoutAllSessions\")}\n              </Button>\n            </ToolbarItem>\n          )\n        }\n        columns={columns}\n        actions={[\n          {\n            title: t(\"signOut\"),\n            onRowClick: onClickSignOut,\n          } as Action<UserSessionRepresentation>,\n        ]}\n        emptyState={\n          <ListEmptyState\n            hasIcon\n            icon={CubesIcon}\n            message={t(\"noSessions\")}\n            instructions={\n              emptyInstructions ? emptyInstructions : t(\"noSessionsDescription\")\n            }\n          />\n        }\n      />\n    </>\n  );\n}\n"],"names":["CubesIconConfig","CubesIcon","createIcon","UsernameCell","row","realm","useRealm","jsx","Link","toUser","ClientsCell","List","ListVariant","clientId","client","ListItem","toClient","SessionsTable","loader","hiddenColumns","emptyInstructions","logoutUser","filter","isSearching","isPaginated","whoAmI","useWhoAmI","navigate","useNavigate","t","useTranslation","addError","useAlerts","formatDate","useFormatDate","key","setKey","useState","refresh","value","isOnUserPage","useMatch","UserRoute","columns","useMemo","name","toggleLogoutDialog","LogoutConfirm","useConfirmDialog","adminClient","isLightweightUser","toUsers","error","onClickSignOut","session","keycloak","jsxs","Fragment","KeycloakDataTable","ToolbarItem","Button","ListEmptyState"],"mappings":"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","x_google_ignoreList":[0]}